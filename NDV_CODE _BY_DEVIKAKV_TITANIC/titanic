# Importing Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings("ignore", category=FutureWarning)

# Load Dataset
df = pd.read_csv("/kaggle/input/titanic/Titanic-Dataset.csv") 

# Display First Few Rows
df.head()
# Basic Info
df.info()

# Handling Missing Values
df['Age'] = df['Age'].fillna(df['Age'].median())
df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])
df.drop(columns=['Cabin'], inplace=True)
df.drop_duplicates(inplace=True)

# Remove Duplicates
df.drop_duplicates(inplace=True)

# Convert Data Types if Needed
df['Pclass'] = df['Pclass'].astype('category')
df.describe(include='all')
df['Survived'].value_counts()
df['Sex'].value_counts()
# Histogram
sns.histplot(df['Age'], kde=True)
plt.title('Age Distribution')
plt.show()

# Box Plot
sns.boxplot(x='Pclass', y='Age', data=df)
plt.title('Age vs Pclass')
plt.show()

# Count Plot
sns.countplot(x='Survived', hue='Sex', data=df)
plt.title('Survival Count by Sex')
plt.show()
# Pair Plot (sample of key variables)
# Correlation Heatmap (already present but add again if needed)
plt.figure(figsize=(8, 6))
sns.heatmap(df[['Survived', 'Age', 'Fare', 'Pclass']].corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

# Scatter Plots for Insight
sns.scatterplot(x='Age', y='Fare', hue='Survived', data=df)
plt.title('Age vs Fare by Survival')
plt.show()

sns.boxplot(x='Survived', y='Fare', data=df)
plt.title('Fare distribution by Survival')
plt.show()


# Correlation Heatmap
plt.figure(figsize=(8, 6))
# Select only numeric columns before correlation
numeric_df = df.select_dtypes(include=['number'])
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

plt.title('Correlation Heatmap')
plt.show()
# Survival rate by gender
print(df.groupby('Sex')['Survived'].mean())

# Survival rate by class
print(df.groupby('Pclass')['Survived'].mean())
# Create FamilySize Feature
df['FamilySize'] = df['SibSp'] + df['Parch'] + 1

# Violin Plot
sns.violinplot(x='Survived', y='FamilySize', data=df)
plt.title('Survival vs Family Size')
plt.show()

