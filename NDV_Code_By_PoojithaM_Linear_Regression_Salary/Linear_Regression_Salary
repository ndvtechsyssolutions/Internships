# Step 1: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Load dataset
data = pd.read_csv('Salary_Data.csv')

# Step 3: Explore data
print(data.head())
print(data.describe())

# Step 4: Visualize data
sns.scatterplot(x='YearsExperience', y='Salary', data=data)
plt.title('Years of Experience vs Salary')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.grid(True)
plt.show()

X = data[['YearsExperience']]
y = data['Salary']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'Mean Squared Error: {mse:.2f}')
print(f'R² Score: {r2:.2f}')

plt.scatter(X, y, color='blue', label='Actual')
plt.plot(X, model.predict(X), color='red', label='Regression Line')
plt.title('Regression Line - Salary Prediction')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.legend()
plt.show()

plt.errorbar(X_test.values.flatten(), y_pred, yerr=abs(y_test - y_pred), fmt='o', label='Prediction with Error Bars')
plt.xlabel('Years of Experience')
plt.ylabel('Predicted Salary')
plt.title('Prediction with Confidence Intervals')
plt.grid(True)
plt.legend()
plt.show()

comparison_df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
comparison_df.plot(kind='bar', figsize=(10, 6))
plt.title('Actual vs Predicted Salaries')
plt.xlabel('Sample')
plt.ylabel('Salary')
plt.tight_layout()
plt.show()

exp = float(input("Enter years of experience: "))
salary_pred = model.predict([[exp]])
print(f"Predicted Salary for {exp} years of experience: ₹{salary_pred[0]:,.2f}")
